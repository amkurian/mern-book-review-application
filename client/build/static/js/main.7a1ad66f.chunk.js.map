{"version":3,"sources":["components/List.js","components/New.js","components/Review.js","components/Edit.js","components/ReviewForm.js","App.js","serviceWorker.js","index.js"],"names":["List","props","componentDidMount","axios","get","then","res","setState","books","data","catch","err","console","error","delete","_id","log","state","Container","Table","className","this","map","book","key","name","author","description","isbn","Button","outline","color","to","onClick","bind","Component","New","change","e","r","newBook","target","value","preventDefault","post","errors","history","push","Form","onSubmit","FormGroup","Label","Input","type","onChange","placeholder","message","Review","match","params","reviews","dark","review","customerName","rating","reviewDescription","Edit","updateBook","put","ReviewForm","selected","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a1ad66f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { Container, Table, Button } from 'reactstrap';\n\nexport class List extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            books: []\n        }\n    }\n\n    componentDidMount = () => {\n        axios\n          .get(`/api/books`)\n          .then(res => {\n            // console.log(res)\n            this.setState({books: res.data.books});\n          })\n          .catch(err => console.error(err));\n    }\n\n    delete = (_id) => {\n      // console.log(_id)\n      axios\n        .delete(`/api/books/${_id}`)\n        .then(res => {\n          console.log(res)\n          this.componentDidMount();\n        })\n        .catch(err => console.error(err));\n    }\n\n    render() {\n      return (\n        <Container>\n        <>\n        <Table className=\"mt-3\">\n            <thead>\n                <th>Name</th>\n                <th>Author</th>\n                <th>Description</th>\n                <th>ISBN</th>\n            </thead>\n            <tbody>\n            {this.state.books.map((book) => {\n              return (\n                <tr key={book._id} className=\"book\">\n                    <td>{book.name}</td>\n                    <td>{book.author}</td>\n                    <td>{book.description}</td>\n                    <td>{book.isbn}</td>\n                    <td>\n                    <Button outline color=\"secondary\" className=\"m-1\">\n                      <Link to={`/books/${book._id}`}>Review</Link>\n                    </Button>\n                    <Button outline color=\"secondary\" className=\"m-1\">\n                      <Link to={`/books/${book._id}/edit`}>Update</Link>\n                    </Button>\n                    <Button outline color=\"secondary\" className=\"m-1\">\n                      <Link onClick={this.delete.bind(this,book._id)}>Delete</Link>\n                    </Button>\n                    </td>\n                </tr>\n                )\n            })}\n          </tbody>\n          </Table>\n        </>\n        </Container>\n      )\n    }\n  }\n\nexport default List\n","import React, { Component } from \"react\"; \nimport axios from 'axios'\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\n\nclass New extends Component {\n  \n  constructor(props) {\n      super(props);\n      this.state = {\n         newBook: {\n             name: \"\",\n             author: \"\",\n             description: \"\",\n             isbn: \"\"\n         }, \n         errors: {}\n      }\n  }\n\n  change = (key, e) => {\n      let r = {...this.state.newBook}\n      r[key] = e.target.value\n      this.setState({newBook: r})\n  }\n\n  newBook = (e) => {\n      e.preventDefault();\n      axios\n        .post(`/api/books`, this.state.newBook)\n        .then(res => {\n            if(res.data.errors){\n                this.setState({errors: res.data.errors.errors})\n            } else {\n                this.props.history.push(\"/books\")\n            }\n        })\n        .catch(err => console.error(err));\n  }\n\n  render() {\n    return (\n        <Container>\n            <Form className=\"m-3\" onSubmit={this.newBook}>\n                <h4>Add New Book</h4>\n                <hr/>\n            <FormGroup>\n            <Label>Book Name:</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"name\")} placeholder=\"Enter the name of book\" />\n            {\n                this.state.errors.name ?\n                <p>{this.state.errors.name.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <FormGroup>\n            <Label>Author</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"author\")} placeholder=\"Enter the name of the author\" />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <FormGroup>\n            <Label>Description</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"description\")} placeholder=\"Enter the description\" />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <FormGroup>\n            <Label>ISBN</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"isbn\")} placeholder=\"Enter the isbn\" />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <Button color=\"primary\" type=\"submit\" className=\"primary\">Register</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default New;","import React, { Component } from 'react'\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom'\nimport { Button, Container, Table } from 'reactstrap';\n\n\nexport class Review extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            book: {reviews:[]}\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.props.match.params._id)\n        axios\n          .get(`/api/books/${this.props.match.params._id}`)\n          .then(res => {\n              this.setState({book: res.data.book})\n          })\n          .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <Container className=\"m-3\">\n                <h4 className=\"float-right\">Reviews for {this.state.book.name}</h4>\n                <Button outline color=\"primary\" className=\"mr-3\">\n                    <Link to={`/books/${this.props.match.params._id}/review`}>New Review</Link>\n                </Button>\n                <Table dark className=\"mt-3\">\n                    <thead>\n                        <th>Customer Name:</th>\n                        <th>Stars:</th>\n                        <th>Description:</th>\n                    </thead>\n                    <tbody>\n                    {this.state.book.reviews.map( review =>  {\n                    return (\n                        <tr key={review._id} className=\"review\">\n                            <td>{review.customerName}</td>\n                            <td>{review.rating}</td>\n                            <td>{review.reviewDescription}</td>\n                        </tr>\n                        )\n                    })}\n                    </tbody>\n                </Table>  \n            </Container>\n        )\n    }\n}\n\nexport default Review\n","import React, { Component } from \"react\"; \nimport axios from 'axios'\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\n\nexport class Edit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n           book: {\n             name: \"\",\n             author: \"\",\n             description: \"\",\n             isbn: \"\"\n           }, \n           errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`/api/books/${this.props.match.params._id}`)\n          .then( res => {\n            this.setState({book: res.data.book});\n          })\n          .catch( err => {\n            console.log(err);\n          });\n      }\n\n    change = (key, e) => {\n    let r = {...this.state.book};\n    r[key] = e.target.value;\n    this.setState({book: r});\n    }\n\n    updateBook = (e) => {\n        e.preventDefault();\n        axios.put(`/api/books/${this.state.book._id}`, this.state.book)\n          .then( res => {\n            if(res.data.errors){\n              this.setState({errors: res.data.errors.errors})\n            } else {\n              this.props.history.push(\"/books\");\n            }\n          });\n      }\n\n  render() {\n    return (\n        <Container>\n            <Form className=\"m-3\" onSubmit={this.updateBook}>\n                <h4>Edit New Book</h4>\n                <hr/>\n            <FormGroup>\n            <Label>Book Name:</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"name\")} value={this.state.book.name} />\n            {\n                this.state.errors.name ?\n                <p>{this.state.errors.name.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <FormGroup>\n            <Label>Author</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"author\")} value={this.state.book.author} />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <FormGroup>\n            <Label>Description</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"description\")} value={this.state.book.description} />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n             <FormGroup>\n            <Label>ISBN</Label>\n            <Input type=\"text\" onChange={this.change.bind(this, \"isbn\")} value={this.state.book.isbn} />\n            {\n                this.state.errors.author ?\n                <p>{this.state.errors.author.message}</p>:\n                \"\"\n            }\n            </FormGroup>\n            <Button color=\"primary\" type=\"submit\" className=\"primary\">Update</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Edit\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Button, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nexport class ReviewForm extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        book: {reviews:[]},\n            review:{\n                customerName: \"\",\n                reviewDescription: \"\",\n                rating: 3\n            },\n        errors: {}\n        }\n    }\n\n    change = (key, e) => {\n        let r = {...this.state.review}\n        r[key] = e.target.value\n        this.setState({review: r})\n    }\n\n    review = (e) => {\n        e.preventDefault();\n        axios\n          .post(`/api/reviews/${this.props.match.params._id}`, this.state.review)\n          .then(res => {\n            if(res.data.errors){\n                this.setState({errors: res.data.errors.errors})\n            } else {\n                this.props.history.push(`/books/${this.props.match.params._id}`)\n            }\n          })\n          .catch(err => console.error(err));\n    }\n\n    componentDidMount = () => {\n        axios\n          .get(`/api/books/${this.props.match.params._id}`)\n          .then(res => {\n              this.setState({book: res.data.book})\n          })\n          .catch(err => console.error(err));\n    }\n\n    render() {\n        return (\n            <Container className=\"m-3\">\n                <div>\n                    <h4>Write a review for {this.state.book.name}</h4>\n                    <hr/>\n                        <Form onSubmit={this.review}>\n                            <FormGroup>\n                            <Label>Your Name:</Label>\n                            <Input type=\"text\" onChange={this.change.bind(this, \"customerName\")} placeholder=\"Please enter your name\" />\n                            {\n                                this.state.errors.customerName ?\n                                <p>{this.state.errors.customerName.message}</p>:\n                                \"\"\n                            }\n                            </FormGroup>\n                            <FormGroup>\n                            <Label>Select</Label>\n                            <select onChange={this.change.bind(this, \"rating\")}>\n                                <option value=\"1\">⭑</option>\n                                <option value=\"2\">⭑⭑</option>\n                                <option value=\"3\" selected>⭑⭑⭑</option>\n                                <option value=\"4\">⭑⭑⭑⭑</option>\n                                <option value=\"5\">⭑⭑⭑⭑⭑</option>\n                            </select>\n                            {\n                                this.state.errors.rating ?\n                                <p>{this.state.errors.rating.message}</p>:\n                                \"\"\n                            }\n                            </FormGroup>\n                            <FormGroup>\n                            <Label>Your Review:</Label>\n                            <Input type=\"text\" onChange={this.change.bind(this, \"reviewDescription\")} placeholder=\"Please write a review\" />\n                            {\n                                this.state.errors.reviewDescription ?\n                                <p>{this.state.errors.reviewDescription.message}</p>:\n                                \"\"\n                            }\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\" className=\"primary\">Submit</Button>\n                        </Form>\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default ReviewForm\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport { Button, Container } from 'reactstrap';\nimport List from './components/List'\nimport New from './components/New'\nimport Review from './components/Review'\nimport Edit from './components/Edit'\nimport ReviewForm from './components/ReviewForm'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <Container className=\"mt-3\">\n          <h1 className=\"mb-3\">GreatReads!</h1>\n          <Button outline color=\"primary\" className=\"mr-3\">\n            <Link to=\"/\">Home</Link>\n          </Button>\n          <Button outline color=\"primary\">\n            <Link to=\"/new\">Add New Book</Link>\n          </Button>\n          <Route exact path=\"/\" component={List}/>\n          <Route exact path=\"/new\" component={New}/>\n          <Route exact path=\"/books/:_id\" component={Review}/>\n          <Route exact path=\"/books/:_id/edit\" component={Edit}/>\n          <Route exact path=\"/books/:_id/review\" component={ReviewForm}/>\n        </Container>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}